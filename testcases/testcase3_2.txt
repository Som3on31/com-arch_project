        lw      0       1       valN
        lw      0       2       valR
        lw      0       6       cbnAd1
        lw      0       5       stack           load stack's addr

        lw      0       4       one
        jalr    6       7             
E       noop
stoppu  halt
comIni  sw      5       7       stack           saves return addr,n and r to stack
        add     4       5       5
        sw      5       2       stack
        add     4       5       5
        sw      5       2       stack
        add     4       5       5
        lw      0       6       lobOne          load -1
combIf  beq     1       2       3               if r = 0 or n = r
        beq     0       1       2
        lw      0       7       comRc1          save addr
        sw      5       7       stack
        add     4       5       5               
        sw      5       2       stack           save r and n-1
        add     4       5       5
        add     6       1       1
        sw      5       1       stack
        add     4       5       5
comRtn  add     4       3       3               $3++
        add     6       5       5               pop all lol
        add     6       5       5               
        add     6       5       5
        jalr    7       0        
cbnAd1  .fill   comIni                          combination's addr
cbnrAd  .fill   comRcs
one     .fill   1                               used for test case
lobOne  .fill   -1
valN    .fill   7                               
valR    .fill   3  
stack   .fill   0                               exits to keep a number here, be it an addr or actual val


$1 for n
$2 for r
$3 for return val
$4 for one or minus one
$5 for stack pointer
$6 for various temp
$7 for return addr